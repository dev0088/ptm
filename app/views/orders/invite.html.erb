<h5>Hi. We need some information from you.</h5>
<h6>Credit card</h6>
<p>Don't break it. We won't charge you unless you do. And we will charge you $50.</p>
<p></p>
<%= simple_form_for @order do |f| %>
  <%= f.input :address_id, as: :select, collection: current_user.addresses %>
  <%= f.input :credit_card_id, as: :select, collection: current_user.credit_cards, hint: "Add a new card" %>
  <%= f.submit %>
<% end %>

<%= simple_form_for CreditCard.new, url: "/profile/credit_cards", remote: true, :html => { :id => "payment-form", class: "form-default mt-4" } do |f| %>
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-lg-8">
          <h5>Credit Card</h5>
          <p class="text-muted mt-2">Safe money transfer using your bank account. We support Mastercard, Visa, Maestro and Skrill.</p>
        </div>
        <div class="col-lg-4 text-lg-right">
          <img alt="Image placeholder" src="<%= image_path "icons/cards/mastercard.png" %>" width="40" class="mr-2">
          <img alt="Image placeholder" src="<%= image_path "icons/cards/visa.png" %>" width="40" class="mr-2">
          <img alt="Image placeholder" src="<%= image_path "icons/cards/american-express.png" %>" width="40" class="mr-2">
          <img alt="Image placeholder" src="<%= image_path "icons/cards/discover.png" %>" width="40">
        </div>
      </div>
      <div class="row mb-3 ml-1 mr-2">
        <div id="card-element" style="width:100%;"></div>
        <div id="card-errors" role="alert"></div>
      </div>
      <div class="text-right">
        <button type="submit" class="btn btn-sm btn-primary" data-disable-with="Saving...">Save card</button>
      </div>
    </div>
  </div>
<% end %>
<%= simple_form_for :address, url: "/addresses" do |f| %>
  <div class="mt-5 pt-5 delimiter-top">

    <div class="page-inner-header mb-4">
      <h5 class="mb-1">Add new address</h5>

      <p class="text-muted mb-0">Fill in your address info for upcoming orders or payments.</p>

    </div>

    <div class="row">
      <div class="col-md-12">
        <%= f.input :nickname, required: false %>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <%= f.input :name %>
      </div>
      <div class="col-md-6">
        <%= f.input :phone_number %>
      </div>
    </div>
    <div class="row align-items-center">
      <div class="col-md-12">
        <%= f.input :street1, :label => "Address line 1" %>
      </div>
    </div>
    <div class="row ">
      <div class="col-md-6">
        <%= f.input :street2, :label => "Address line 2", required: false %>
      </div>
      <div class="col-md-6">
        <%= f.input :street3, :label => "Address line 3", required: false %>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <%= f.input :city %>
      </div>
      <div class="col-md-6">
        <%= f.input :state %>
      </div>
      <div class="col-md-2">
        <%= f.input :zip %>
      </div>
    </div>
    <%= f.input :country, as: :hidden, value: 'US' %>
    <%= f.submit %>
  </div>
<% end %>
<script>

    // Create an instance of Elements.
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
        base: {
            color: '#32325d',
            lineHeight: '18px',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };

    // Create an instance of the card Element.
    var card = elements.create('card', {style: style});

    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function(event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            $('#payment-form').find('button').removeAttr('disabled').html("Save card")

            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Handle form submission.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();

        stripe.createToken(card).then(function(result) {
            if (result.error) {
                // Inform the user if there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
                $('#payment-form').find('button').removeAttr('disabled').html("Save card")
            } else {
                stripeTokenHandler(result.token);
            }
        });
    });

    function stripeTokenHandler(token) {
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'credit_card[token]');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);
        form.submit();
    }
</script>
